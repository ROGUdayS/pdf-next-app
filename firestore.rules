rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /pdfs/{pdfId} {
      // Allow read if PDF is publicly shared or user is authenticated
      allow read: if resource.data.isPubliclyShared == true || request.auth != null;
      
      // Allow create if user is authenticated
      allow create: if request.auth != null;
      
      // Allow update if user is authenticated
      allow update: if request.auth != null;
      
      // Allow delete if user is authenticated
      allow delete: if request.auth != null;
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user has access to a PDF
    function hasAccessToPdf(pdfId) {
      let pdf = get(/databases/$(database)/documents/pdfs/$(pdfId));
      return pdf != null && (
        pdf.data.isPubliclyShared == true || // Publicly shared
        pdf.data.ownerId == request.auth.uid || // Owner
        (pdf.data.accessUsers != null && pdf.data.accessUsers.hasAny([request.auth.email])) // Shared with user
      );
    }

    // PDF Comments collection
    match /pdf_comments/{commentId} {
      // Allow read if user is authenticated
      allow read: if isAuthenticated();
      
      // Allow create if user is authenticated and:
      // 1. The userId matches the authenticated user
      // 2. If pdfId is provided, user must have access to that PDF
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid && 
        (!request.resource.data.keys().hasAny(['pdfId']) || 
          (request.resource.data.pdfId != null && hasAccessToPdf(request.resource.data.pdfId)));
      
      // Allow update (for likes and replies) if user is authenticated
      allow update: if isAuthenticated() && 
        (!resource.data.keys().hasAny(['pdfId']) || 
          (resource.data.pdfId != null && hasAccessToPdf(resource.data.pdfId))) &&
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['likes', 'replies']);
      
      // Allow delete if user is the comment creator or PDF owner
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || // Comment creator
        (resource.data.pdfId != null && 
          get(/databases/$(database)/documents/pdfs/$(resource.data.pdfId))
            .data.ownerId == request.auth.uid) // PDF owner
      );
    }
  }
} 